{"version":3,"sources":["webpack:///./src/components/TimerNotification/TimerNotification.vue?2804","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///src/components/TimerNotification/TimerNotification.vue","webpack:///./src/components/TimerNotification/TimerNotification.vue?2125","webpack:///./src/components/TimerNotification/TimerNotification.vue","webpack:///./src/swRegistration.ts","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","nativeOn","$event","subscribeForNotifications","_v","notificationPermission","staticRenderFns","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","name","props","timerWorker","type","Worker","default","data","notificationAllowed","token","worker","watch","methods","onTokenReceived","currentToken","sendTokenToWorker","getCachedOverride","notificationNotAllowed","postMessage","setNotificationToken","notificationToken","fireEventWithNotificationState","$emit","localStorage","getItem","setCachedOverride","setItem","component","serviceWorkerRegistration","register","navigator","serviceWorker","scope","registration","useServiceWorker","catch","console","log","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"mappings":"0IAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,WAAW,CAACE,YAAY,0CAA0C,CAAEN,EAAuB,oBAAEI,EAAG,QAAQ,CAACE,YAAY,cAAcC,MAAM,CAAC,SAAW,GAAG,KAAO,GAAG,MAAQ,SAASC,SAAS,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIU,+BAA+B,CAACV,EAAIW,GAAG,uBAAuBP,EAAG,SAAS,CAACJ,EAAIW,GAAG,oBAAoB,GAAmC,YAA/BX,EAAIY,uBAAsCR,EAAG,QAAQ,CAACE,YAAY,aAAaC,MAAM,CAAC,SAAW,GAAG,KAAO,GAAG,MAAQ,SAASC,SAAS,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIU,+BAA+B,CAACV,EAAIW,GAAG,oCAAoCP,EAAG,SAAS,CAACJ,EAAIW,GAAG,wBAAwB,GAAmC,WAA/BX,EAAIY,uBAAqCR,EAAG,QAAQ,CAACE,YAAY,aAAaC,MAAM,CAAC,SAAW,GAAG,KAAO,GAAG,MAAQ,SAASC,SAAS,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIU,+BAA+B,CAACV,EAAIW,GAAG,2BAA2BP,EAAG,SAAS,CAACJ,EAAIW,GAAG,wBAAwB,GAAGP,EAAG,QAAQ,CAACE,YAAY,YAAYC,MAAM,CAAC,SAAW,GAAG,KAAO,GAAG,MAAQ,SAASC,SAAS,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIU,+BAA+B,CAACV,EAAIW,GAAG,wBAAwBP,EAAG,SAAS,CAACJ,EAAIW,GAAG,yBAAyB,IAAI,IAAI,IAC/uCE,EAAkB,G,UCDtB,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAO7B,KACP8B,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGI,MAAMH,EAAMC,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,GAGnEhB,OAAMiB,O,sCCwBZ,GACEC,KAAM,oBACNC,MAAO,CACLC,YAAa,CACXC,KAAMC,OACNC,QAAS,KAGbC,KARF,WASI,MAAO,CACL9B,uBAAwB,UACxB+B,qBAAqB,EACrBC,MAAO,GACPC,OAAQ5C,KAAKqC,cAGjB,QAhBF,WAgBA,2JAEA,iDAFA,SAGA,+BAHA,OAIA,gBAJA,mDAMA,kCANA,4DASEQ,MAAO,CACLH,oBAAqB,qBAEvBI,QAAS,CACP,YADJ,WACA,2JACA,aADA,OAEA,yDAFA,8CAII,SALJ,WAKA,0KAEA,kBAFA,OAEA,EAFA,OAGA,qBAHA,mDAKA,2BALA,4DAQIC,gBAbJ,SAaA,GACUC,GACFhD,KAAK2C,MAAQK,EACbhD,KAAKiD,kBAAkBD,GACvBhD,KAAK0C,oBAAsB1C,KAAKkD,qBAEhClD,KAAKmD,0BAGTA,uBAtBJ,WAuBMnD,KAAK0C,qBAAsB,GAE7BO,kBAzBJ,SAyBA,GACMjD,KAAK4C,OAAOQ,YAAY,CACtBC,sBAAsB,EACtBC,kBAAmBX,KAGvBY,+BA/BJ,WAgCMvD,KAAKwD,MAAM,qBAAsBxD,KAAKkD,sBAExC,0BAlCJ,WAkCA,oKAEA,2BAFA,OAGA,6CAHA,kDAKA,yBALA,2DAQIA,kBA1CJ,WA2CM,MAAyD,QAAlDO,aAAaC,QAAQ,0BAE9BC,kBA7CJ,SA6CA,GACMF,aAAaG,QACnB,wBACA,cAGM5D,KAAKuD,oCCtI+V,I,YCOtWM,EAAY,eACd,EACA/D,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAAiD,E,mKChBJC,E,YAEEC,EAAW,WAEpBD,EADE,kBAAmBE,UACOA,UAAUC,cACnCF,SAAS,QAAS,CACjBG,MAAO,OAERxC,MAAK,SAAAyC,GACJ,OAAkBC,iBAAiBD,MAEpCE,OAAM,SAAApC,GACLqC,QAAQC,IAAI,sCACZD,QAAQ/C,MAAMU,MAGUR,QAAQT,W,uBCXxC,IAAIwD,EAAW,SAAUC,GACvB,aAEA,IAEIvC,EAFAwC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,oBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKrE,EAAKG,GAOxB,OANAqD,OAAOc,eAAeD,EAAKrE,EAAK,CAC9BG,MAAOA,EACPoE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELJ,EAAIrE,GAEb,IAEEoE,EAAO,GAAI,IACX,MAAOtD,GACPsD,EAAS,SAASC,EAAKrE,EAAKG,GAC1B,OAAOkE,EAAIrE,GAAOG,GAItB,SAASuE,EAAKC,EAASC,EAASlE,EAAMmE,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQnB,qBAAqBsB,EAAYH,EAAUG,EAC/EC,EAAYxB,OAAOyB,OAAOH,EAAerB,WACzCyB,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAAUC,EAAiBV,EAASjE,EAAMwE,GAE7CF,EAcT,SAASM,EAAS7E,EAAI4D,EAAKpE,GACzB,IACE,MAAO,CAAEkB,KAAM,SAAUlB,IAAKQ,EAAG8E,KAAKlB,EAAKpE,IAC3C,MAAOa,GACP,MAAO,CAAEK,KAAM,QAASlB,IAAKa,IAhBjCwC,EAAQoB,KAAOA,EAoBf,IAAIc,EAAyB,iBACzBC,EAAyB,iBACzBC,EAAoB,YACpBC,EAAoB,YAIpBC,EAAmB,GAMvB,SAASb,KACT,SAASc,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxB3B,EAAO2B,EAAmBjC,GAAgB,WACxC,OAAOjF,QAGT,IAAImH,EAAWxC,OAAOyC,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B3C,GAC5BG,EAAO6B,KAAKW,EAAyBpC,KAGvCiC,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2BrC,UAClCsB,EAAUtB,UAAYD,OAAOyB,OAAOc,GAYtC,SAASM,EAAsB5C,GAC7B,CAAC,OAAQ,QAAS,UAAU6C,SAAQ,SAASC,GAC3CnC,EAAOX,EAAW8C,GAAQ,SAAStG,GACjC,OAAOpB,KAAKuG,QAAQmB,EAAQtG,SAkClC,SAASuG,EAAcxB,EAAWyB,GAChC,SAASC,EAAOH,EAAQtG,EAAKL,EAASC,GACpC,IAAI8G,EAASrB,EAASN,EAAUuB,GAASvB,EAAW/E,GACpD,GAAoB,UAAhB0G,EAAOxF,KAEJ,CACL,IAAIyF,EAASD,EAAO1G,IAChBE,EAAQyG,EAAOzG,MACnB,OAAIA,GACiB,kBAAVA,GACPuD,EAAO6B,KAAKpF,EAAO,WACdsG,EAAY7G,QAAQO,EAAM0G,SAAStG,MAAK,SAASJ,GACtDuG,EAAO,OAAQvG,EAAOP,EAASC,MAC9B,SAASiB,GACV4F,EAAO,QAAS5F,EAAKlB,EAASC,MAI3B4G,EAAY7G,QAAQO,GAAOI,MAAK,SAASuG,GAI9CF,EAAOzG,MAAQ2G,EACflH,EAAQgH,MACP,SAASxG,GAGV,OAAOsG,EAAO,QAAStG,EAAOR,EAASC,MAvBzCA,EAAO8G,EAAO1G,KA4BlB,IAAI8G,EAEJ,SAASC,EAAQT,EAAQtG,GACvB,SAASgH,IACP,OAAO,IAAIR,GAAY,SAAS7G,EAASC,GACvC6G,EAAOH,EAAQtG,EAAKL,EAASC,MAIjC,OAAOkH,EAaLA,EAAkBA,EAAgBxG,KAChC0G,EAGAA,GACEA,IAKRpI,KAAKuG,QAAU4B,EA2BjB,SAAS3B,EAAiBV,EAASjE,EAAMwE,GACvC,IAAIgC,EAAQ1B,EAEZ,OAAO,SAAgBe,EAAQtG,GAC7B,GAAIiH,IAAUxB,EACZ,MAAM,IAAIyB,MAAM,gCAGlB,GAAID,IAAUvB,EAAmB,CAC/B,GAAe,UAAXY,EACF,MAAMtG,EAKR,OAAOmH,IAGTlC,EAAQqB,OAASA,EACjBrB,EAAQjF,IAAMA,EAEd,MAAO,EAAM,CACX,IAAIoH,EAAWnC,EAAQmC,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUnC,GACnD,GAAIoC,EAAgB,CAClB,GAAIA,IAAmB1B,EAAkB,SACzC,OAAO0B,GAIX,GAAuB,SAAnBpC,EAAQqB,OAGVrB,EAAQsC,KAAOtC,EAAQuC,MAAQvC,EAAQjF,SAElC,GAAuB,UAAnBiF,EAAQqB,OAAoB,CACrC,GAAIW,IAAU1B,EAEZ,MADA0B,EAAQvB,EACFT,EAAQjF,IAGhBiF,EAAQwC,kBAAkBxC,EAAQjF,SAEN,WAAnBiF,EAAQqB,QACjBrB,EAAQyC,OAAO,SAAUzC,EAAQjF,KAGnCiH,EAAQxB,EAER,IAAIiB,EAASrB,EAASX,EAASjE,EAAMwE,GACrC,GAAoB,WAAhByB,EAAOxF,KAAmB,CAO5B,GAJA+F,EAAQhC,EAAQ7E,KACZsF,EACAF,EAEAkB,EAAO1G,MAAQ2F,EACjB,SAGF,MAAO,CACLzF,MAAOwG,EAAO1G,IACdI,KAAM6E,EAAQ7E,MAGS,UAAhBsG,EAAOxF,OAChB+F,EAAQvB,EAGRT,EAAQqB,OAAS,QACjBrB,EAAQjF,IAAM0G,EAAO1G,OAU7B,SAASsH,EAAoBF,EAAUnC,GACrC,IAAIqB,EAASc,EAAStD,SAASmB,EAAQqB,QACvC,GAAIA,IAAWxF,EAAW,CAKxB,GAFAmE,EAAQmC,SAAW,KAEI,UAAnBnC,EAAQqB,OAAoB,CAE9B,GAAIc,EAAStD,SAAS,YAGpBmB,EAAQqB,OAAS,SACjBrB,EAAQjF,IAAMc,EACdwG,EAAoBF,EAAUnC,GAEP,UAAnBA,EAAQqB,QAGV,OAAOX,EAIXV,EAAQqB,OAAS,QACjBrB,EAAQjF,IAAM,IAAI2H,UAChB,kDAGJ,OAAOhC,EAGT,IAAIe,EAASrB,EAASiB,EAAQc,EAAStD,SAAUmB,EAAQjF,KAEzD,GAAoB,UAAhB0G,EAAOxF,KAIT,OAHA+D,EAAQqB,OAAS,QACjBrB,EAAQjF,IAAM0G,EAAO1G,IACrBiF,EAAQmC,SAAW,KACZzB,EAGT,IAAI1F,EAAOyG,EAAO1G,IAElB,OAAMC,EAOFA,EAAKG,MAGP6E,EAAQmC,EAASQ,YAAc3H,EAAKC,MAGpC+E,EAAQ4C,KAAOT,EAASU,QAQD,WAAnB7C,EAAQqB,SACVrB,EAAQqB,OAAS,OACjBrB,EAAQjF,IAAMc,GAUlBmE,EAAQmC,SAAW,KACZzB,GANE1F,GA3BPgF,EAAQqB,OAAS,QACjBrB,EAAQjF,IAAM,IAAI2H,UAAU,oCAC5B1C,EAAQmC,SAAW,KACZzB,GAoDX,SAASoC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBpJ,KAAK0J,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIvB,EAASuB,EAAMQ,YAAc,GACjC/B,EAAOxF,KAAO,gBACPwF,EAAO1G,IACdiI,EAAMQ,WAAa/B,EAGrB,SAASxB,EAAQN,GAIfhG,KAAK0J,WAAa,CAAC,CAAEJ,OAAQ,SAC7BtD,EAAYyB,QAAQ0B,EAAcnJ,MAClCA,KAAK8J,OAAM,GA8Bb,SAASxC,EAAOyC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAS9E,GAC9B,GAAI+E,EACF,OAAOA,EAAetD,KAAKqD,GAG7B,GAA6B,oBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGlB,EAAO,SAASA,IAC1B,QAASkB,EAAIJ,EAASG,OACpB,GAAIrF,EAAO6B,KAAKqD,EAAUI,GAGxB,OAFAlB,EAAK3H,MAAQyI,EAASI,GACtBlB,EAAKzH,MAAO,EACLyH,EAOX,OAHAA,EAAK3H,MAAQY,EACb+G,EAAKzH,MAAO,EAELyH,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMV,GAIjB,SAASA,IACP,MAAO,CAAEjH,MAAOY,EAAWV,MAAM,GA+MnC,OA7mBAwF,EAAkBpC,UAAYqC,EAC9B1B,EAAOgC,EAAI,cAAeN,GAC1B1B,EAAO0B,EAA4B,cAAeD,GAClDA,EAAkBoD,YAAc7E,EAC9B0B,EACA5B,EACA,qBAaFZ,EAAQ4F,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAOE,YAClD,QAAOD,IACHA,IAASvD,GAG2B,uBAAnCuD,EAAKH,aAAeG,EAAKpI,QAIhCsC,EAAQgG,KAAO,SAASH,GAQtB,OAPI3F,OAAO+F,eACT/F,OAAO+F,eAAeJ,EAAQrD,IAE9BqD,EAAOK,UAAY1D,EACnB1B,EAAO+E,EAAQjF,EAAmB,sBAEpCiF,EAAO1F,UAAYD,OAAOyB,OAAOmB,GAC1B+C,GAOT7F,EAAQmG,MAAQ,SAASxJ,GACvB,MAAO,CAAE4G,QAAS5G,IAsEpBoG,EAAsBG,EAAc/C,WACpCW,EAAOoC,EAAc/C,UAAWO,GAAqB,WACnD,OAAOnF,QAETyE,EAAQkD,cAAgBA,EAKxBlD,EAAQoG,MAAQ,SAAS/E,EAASC,EAASlE,EAAMmE,EAAa4B,QACxC,IAAhBA,IAAwBA,EAAcnG,SAE1C,IAAIqJ,EAAO,IAAInD,EACb9B,EAAKC,EAASC,EAASlE,EAAMmE,GAC7B4B,GAGF,OAAOnD,EAAQ4F,oBAAoBtE,GAC/B+E,EACAA,EAAK7B,OAAOvH,MAAK,SAASqG,GACxB,OAAOA,EAAOvG,KAAOuG,EAAOzG,MAAQwJ,EAAK7B,WAuKjDzB,EAAsBD,GAEtBhC,EAAOgC,EAAIlC,EAAmB,aAO9BE,EAAOgC,EAAItC,GAAgB,WACzB,OAAOjF,QAGTuF,EAAOgC,EAAI,YAAY,WACrB,MAAO,wBAkCT9C,EAAQsG,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAI5J,KAAO6J,EACdD,EAAKpB,KAAKxI,GAMZ,OAJA4J,EAAKE,UAIE,SAAShC,IACd,MAAO8B,EAAKb,OAAQ,CAClB,IAAI/I,EAAM4J,EAAKG,MACf,GAAI/J,KAAO6J,EAGT,OAFA/B,EAAK3H,MAAQH,EACb8H,EAAKzH,MAAO,EACLyH,EAQX,OADAA,EAAKzH,MAAO,EACLyH,IAsCXxE,EAAQ6C,OAASA,EAMjBhB,EAAQ1B,UAAY,CAClB4F,YAAalE,EAEbwD,MAAO,SAASqB,GAcd,GAbAnL,KAAKoL,KAAO,EACZpL,KAAKiJ,KAAO,EAGZjJ,KAAK2I,KAAO3I,KAAK4I,MAAQ1G,EACzBlC,KAAKwB,MAAO,EACZxB,KAAKwI,SAAW,KAEhBxI,KAAK0H,OAAS,OACd1H,KAAKoB,IAAMc,EAEXlC,KAAK0J,WAAWjC,QAAQmC,IAEnBuB,EACH,IAAK,IAAIhJ,KAAQnC,KAEQ,MAAnBmC,EAAKkJ,OAAO,IACZxG,EAAO6B,KAAK1G,KAAMmC,KACjB8H,OAAO9H,EAAKmJ,MAAM,MACrBtL,KAAKmC,GAAQD,IAMrBqJ,KAAM,WACJvL,KAAKwB,MAAO,EAEZ,IAAIgK,EAAYxL,KAAK0J,WAAW,GAC5B+B,EAAaD,EAAU3B,WAC3B,GAAwB,UAApB4B,EAAWnJ,KACb,MAAMmJ,EAAWrK,IAGnB,OAAOpB,KAAK0L,MAGd7C,kBAAmB,SAAS8C,GAC1B,GAAI3L,KAAKwB,KACP,MAAMmK,EAGR,IAAItF,EAAUrG,KACd,SAAS4L,EAAOC,EAAKC,GAYnB,OAXAhE,EAAOxF,KAAO,QACdwF,EAAO1G,IAAMuK,EACbtF,EAAQ4C,KAAO4C,EAEXC,IAGFzF,EAAQqB,OAAS,OACjBrB,EAAQjF,IAAMc,KAGN4J,EAGZ,IAAK,IAAI3B,EAAInK,KAAK0J,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQrJ,KAAK0J,WAAWS,GACxBrC,EAASuB,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOsC,EAAO,OAGhB,GAAIvC,EAAMC,QAAUtJ,KAAKoL,KAAM,CAC7B,IAAIW,EAAWlH,EAAO6B,KAAK2C,EAAO,YAC9B2C,EAAanH,EAAO6B,KAAK2C,EAAO,cAEpC,GAAI0C,GAAYC,EAAY,CAC1B,GAAIhM,KAAKoL,KAAO/B,EAAME,SACpB,OAAOqC,EAAOvC,EAAME,UAAU,GACzB,GAAIvJ,KAAKoL,KAAO/B,EAAMG,WAC3B,OAAOoC,EAAOvC,EAAMG,iBAGjB,GAAIuC,GACT,GAAI/L,KAAKoL,KAAO/B,EAAME,SACpB,OAAOqC,EAAOvC,EAAME,UAAU,OAG3B,KAAIyC,EAMT,MAAM,IAAI1D,MAAM,0CALhB,GAAItI,KAAKoL,KAAO/B,EAAMG,WACpB,OAAOoC,EAAOvC,EAAMG,gBAU9BV,OAAQ,SAASxG,EAAMlB,GACrB,IAAK,IAAI+I,EAAInK,KAAK0J,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQrJ,KAAK0J,WAAWS,GAC5B,GAAId,EAAMC,QAAUtJ,KAAKoL,MACrBvG,EAAO6B,KAAK2C,EAAO,eACnBrJ,KAAKoL,KAAO/B,EAAMG,WAAY,CAChC,IAAIyC,EAAe5C,EACnB,OAIA4C,IACU,UAAT3J,GACS,aAATA,IACD2J,EAAa3C,QAAUlI,GACvBA,GAAO6K,EAAazC,aAGtByC,EAAe,MAGjB,IAAInE,EAASmE,EAAeA,EAAapC,WAAa,GAItD,OAHA/B,EAAOxF,KAAOA,EACdwF,EAAO1G,IAAMA,EAET6K,GACFjM,KAAK0H,OAAS,OACd1H,KAAKiJ,KAAOgD,EAAazC,WAClBzC,GAGF/G,KAAKkM,SAASpE,IAGvBoE,SAAU,SAASpE,EAAQ2B,GACzB,GAAoB,UAAhB3B,EAAOxF,KACT,MAAMwF,EAAO1G,IAcf,MAXoB,UAAhB0G,EAAOxF,MACS,aAAhBwF,EAAOxF,KACTtC,KAAKiJ,KAAOnB,EAAO1G,IACM,WAAhB0G,EAAOxF,MAChBtC,KAAK0L,KAAO1L,KAAKoB,IAAM0G,EAAO1G,IAC9BpB,KAAK0H,OAAS,SACd1H,KAAKiJ,KAAO,OACa,WAAhBnB,EAAOxF,MAAqBmH,IACrCzJ,KAAKiJ,KAAOQ,GAGP1C,GAGToF,OAAQ,SAAS3C,GACf,IAAK,IAAIW,EAAInK,KAAK0J,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQrJ,KAAK0J,WAAWS,GAC5B,GAAId,EAAMG,aAAeA,EAGvB,OAFAxJ,KAAKkM,SAAS7C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPtC,IAKb,MAAS,SAASuC,GAChB,IAAK,IAAIa,EAAInK,KAAK0J,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQrJ,KAAK0J,WAAWS,GAC5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAIxB,EAASuB,EAAMQ,WACnB,GAAoB,UAAhB/B,EAAOxF,KAAkB,CAC3B,IAAI8J,EAAStE,EAAO1G,IACpBwI,EAAcP,GAEhB,OAAO+C,GAMX,MAAM,IAAI9D,MAAM,0BAGlB+D,cAAe,SAAStC,EAAUf,EAAYE,GAa5C,OAZAlJ,KAAKwI,SAAW,CACdtD,SAAUoC,EAAOyC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBlJ,KAAK0H,SAGP1H,KAAKoB,IAAMc,GAGN6E,IAQJtC,EA9sBK,CAqtBiB6H,EAAO7H,SAGtC,IACE8H,mBAAqB/H,EACrB,MAAOgI,GAWmB,kBAAfC,WACTA,WAAWF,mBAAqB/H,EAEhCkI,SAAS,IAAK,yBAAdA,CAAwClI","file":"js/chunk-4044d162.89d54635.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-layout',{staticClass:\"d-flex justify-center text-center mt-5\"},[(_vm.notificationAllowed)?_c('v-btn',{staticClass:\"green--text\",attrs:{\"outlined\":\"\",\"text\":\"\",\"color\":\"green\"},nativeOn:{\"click\":function($event){return _vm.subscribeForNotifications()}}},[_vm._v(\" Nofitications: On \"),_c('v-icon',[_vm._v(\"notifications\")])],1):(_vm.notificationPermission === 'default')?_c('v-btn',{staticClass:\"grey--text\",attrs:{\"outlined\":\"\",\"text\":\"\",\"color\":\"green\"},nativeOn:{\"click\":function($event){return _vm.subscribeForNotifications()}}},[_vm._v(\" Nofitications: Need permission \"),_c('v-icon',[_vm._v(\"notifications_off\")])],1):(_vm.notificationPermission === 'denied')?_c('v-btn',{staticClass:\"grey--text\",attrs:{\"outlined\":\"\",\"text\":\"\",\"color\":\"green\"},nativeOn:{\"click\":function($event){return _vm.subscribeForNotifications()}}},[_vm._v(\" Nofitications: Denied \"),_c('v-icon',[_vm._v(\"notifications_off\")])],1):_c('v-btn',{staticClass:\"red--text\",attrs:{\"outlined\":\"\",\"text\":\"\",\"color\":\"green\"},nativeOn:{\"click\":function($event){return _vm.subscribeForNotifications()}}},[_vm._v(\" Nofitications: Off \"),_c('v-icon',[_vm._v(\"notifications_none\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","<template>\n  <div>\n    <v-layout class=\"d-flex justify-center text-center mt-5\">\n      <v-btn\n        outlined\n        text\n        color=\"green\"\n        @click.native=\"subscribeForNotifications()\"\n        v-if=\"notificationAllowed\"\n        class=\"green--text\"\n      >\n        Nofitications: On\n        <v-icon>notifications</v-icon>\n      </v-btn>\n      <v-btn\n        outlined\n        text\n        color=\"green\"\n        @click.native=\"subscribeForNotifications()\"\n        v-else-if=\"notificationPermission === 'default'\"\n        class=\"grey--text\"\n      >\n        Nofitications: Need permission\n        <v-icon>notifications_off</v-icon>\n      </v-btn>\n      <v-btn\n        outlined\n        text\n        color=\"green\"\n        @click.native=\"subscribeForNotifications()\"\n        v-else-if=\"notificationPermission === 'denied'\"\n        class=\"grey--text\"\n      >\n        Nofitications: Denied\n        <v-icon>notifications_off</v-icon>\n      </v-btn>\n      <v-btn\n        outlined\n        text\n        color=\"green\"\n        @click.native=\"subscribeForNotifications()\"\n        v-else\n        class=\"red--text\"\n      >\n        Nofitications: Off\n        <v-icon>notifications_none</v-icon>\n      </v-btn>\n    </v-layout>\n  </div>\n</template>\n\n<script>\nimport { firebaseMessaging } from \"../../firebaseMessaging\";\nimport { serviceWorkerRegistration } from \"../../swRegistration\";\n\nexport default {\n  name: \"TimerNotification\",\n  props: {\n    timerWorker: {\n      type: Worker,\n      default: {}\n    }\n  },\n  data() {\n    return {\n      notificationPermission: \"default\",\n      notificationAllowed: false,\n      token: \"\",\n      worker: this.timerWorker\n    };\n  },\n  async mounted() {\n    try {\n      this.notificationPermission = Notification.permission;\n      await serviceWorkerRegistration;\n      this.setupTokens();\n    } catch {\n      console.error(\"SW not supported\");\n    }\n  },\n  watch: {\n    notificationAllowed: \"setCachedOverride\"\n  },\n  methods: {\n    async setupTokens() {\n      await this.getToken();\n      firebaseMessaging.onTokenRefresh(() => this.getToken());\n    },\n    async getToken() {\n      try {\n        const token = await firebaseMessaging.getToken();\n        this.onTokenReceived(token);\n      } catch (err) {\n        this.notificationNotAllowed();\n      }\n    },\n    onTokenReceived(currentToken) {\n      if (currentToken) {\n        this.token = currentToken;\n        this.sendTokenToWorker(currentToken);\n        this.notificationAllowed = this.getCachedOverride();\n      } else {\n        this.notificationNotAllowed();\n      }\n    },\n    notificationNotAllowed() {\n      this.notificationAllowed = false;\n    },\n    sendTokenToWorker(token) {\n      this.worker.postMessage({\n        setNotificationToken: true,\n        notificationToken: token\n      });\n    },\n    fireEventWithNotificationState() {\n      this.$emit(\"notification-state\", this.getCachedOverride());\n    },\n    async subscribeForNotifications() {\n      try {\n        await firebaseMessaging.requestPermission();\n        this.notificationAllowed = !this.notificationAllowed;\n      } catch (err) {\n        this.notificationAllowed = false;\n      }\n    },\n    getCachedOverride() {\n      return localStorage.getItem(\"notification-override\") === \"yes\";\n    },\n    setCachedOverride(notificationOverride) {\n      localStorage.setItem(\n        \"notification-override\",\n        notificationOverride ? \"yes\" : \"no\"\n      );\n\n      this.fireEventWithNotificationState();\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TimerNotification.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TimerNotification.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TimerNotification.vue?vue&type=template&id=2c54ef1a&\"\nimport script from \"./TimerNotification.vue?vue&type=script&lang=js&\"\nexport * from \"./TimerNotification.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { firebaseMessaging } from \"./firebaseMessaging\";\n\nexport let serviceWorkerRegistration: Promise<void>;\n\nexport const register = () => {\n  if (\"serviceWorker\" in navigator) {\n    serviceWorkerRegistration = navigator.serviceWorker\n      .register(\"sw.js\", {\n        scope: \"./\"\n      })\n      .then(registration => {\n        firebaseMessaging.useServiceWorker(registration);\n      })\n      .catch(err => {\n        console.log(\"Service Worker registration failed\");\n        console.error(err);\n      });\n  } else {\n    serviceWorkerRegistration = Promise.reject();\n  }\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}